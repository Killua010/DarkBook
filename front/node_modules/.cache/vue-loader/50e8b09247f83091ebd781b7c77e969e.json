{"remainingRequest":"/home/daniel/Documentos/DarkBookES3Front/ES3/vue-material-kit-v1.0.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/DarkBookES3Front/ES3/vue-material-kit-v1.0.0/src/components/Pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/vue-material-kit-v1.0.0/src/components/Pagination.vue","mtime":1538042626000},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/vue-material-kit-v1.0.0/node_modules/cache-loader/dist/cjs.js","mtime":1539654209606},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/vue-material-kit-v1.0.0/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/vue-material-kit-v1.0.0/node_modules/cache-loader/dist/cjs.js","mtime":1539654209606},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/vue-material-kit-v1.0.0/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"pagination\",\n  props: {\n    type: {\n      type: String,\n      default: \"primary\",\n      validator: value => {\n        return [\n          \"default\",\n          \"primary\",\n          \"danger\",\n          \"success\",\n          \"warning\",\n          \"info\",\n          \"rose\"\n        ].includes(value);\n      }\n    },\n    withText: Boolean,\n    noArrows: Boolean,\n    pageCount: {\n      type: Number,\n      default: 0\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 1\n    }\n  },\n  computed: {\n    paginationClass() {\n      return `pagination-${this.type}`;\n    },\n    totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n      return 1;\n    },\n    pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n      return this.defaultPagesToDisplay;\n    },\n    minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n    maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n  },\n  data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n  methods: {\n    range(min, max) {\n      let arr = [];\n      for (let i = min; i <= max; i++) {\n        arr.push(i);\n      }\n      return arr;\n    },\n    changePage(item) {\n      this.$emit(\"input\", item);\n    },\n    nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit(\"input\", this.value + 1);\n      }\n    },\n    prevPage() {\n      if (this.value > 1) {\n        this.$emit(\"input\", this.value - 1);\n      }\n    }\n  },\n  watch: {\n    perPage() {\n      this.$emit(\"input\", 1);\n    },\n    total() {\n      this.$emit(\"input\", 1);\n    }\n  }\n};\n",{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"Pagination.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <ul class=\"pagination\" :class=\"paginationClass\">\n    <li class=\"page-item prev-page\" :class=\"{'disabled': value === 1, 'no-arrows': noArrows}\">\n      <a class=\"page-link\" aria-label=\"Previous\" @click=\"prevPage\">\n        <template v-if=\"withText\">Prev</template>\n        <i class=\"fas fa-angle-double-left\" v-else></i>\n      </a>\n    </li>\n    <li class=\"page-item\"\n        v-for=\"item in range(minPage, maxPage)\"\n        :key=\"item\"\n        :class=\"{active: value === item}\">\n      <a class=\"page-link\" @click=\"changePage(item)\">{{item}}</a>\n    </li>\n    <li class=\"page-item page-pre next-page\" :class=\"{ 'disabled': value === totalPages, 'no-arrows': noArrows}\">\n      <a class=\"page-link\" aria-label=\"Next\" @click=\"nextPage\">\n        <template v-if=\"withText\">Next</template>\n        <i class=\"fas fa-angle-double-right\" v-else></i>\n      </a>\n    </li>\n  </ul>\n</template>\n<script>\nexport default {\n  name: \"pagination\",\n  props: {\n    type: {\n      type: String,\n      default: \"primary\",\n      validator: value => {\n        return [\n          \"default\",\n          \"primary\",\n          \"danger\",\n          \"success\",\n          \"warning\",\n          \"info\",\n          \"rose\"\n        ].includes(value);\n      }\n    },\n    withText: Boolean,\n    noArrows: Boolean,\n    pageCount: {\n      type: Number,\n      default: 0\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 1\n    }\n  },\n  computed: {\n    paginationClass() {\n      return `pagination-${this.type}`;\n    },\n    totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n      return 1;\n    },\n    pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n      return this.defaultPagesToDisplay;\n    },\n    minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n    maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n  },\n  data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n  methods: {\n    range(min, max) {\n      let arr = [];\n      for (let i = min; i <= max; i++) {\n        arr.push(i);\n      }\n      return arr;\n    },\n    changePage(item) {\n      this.$emit(\"input\", item);\n    },\n    nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit(\"input\", this.value + 1);\n      }\n    },\n    prevPage() {\n      if (this.value > 1) {\n        this.$emit(\"input\", this.value - 1);\n      }\n    }\n  },\n  watch: {\n    perPage() {\n      this.$emit(\"input\", 1);\n    },\n    total() {\n      this.$emit(\"input\", 1);\n    }\n  }\n};\n</script>\n"]}]}