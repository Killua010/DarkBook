{"remainingRequest":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/layout/MainNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/layout/MainNavbar.vue","mtime":1541806090992},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541806089144},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/babel-loader/lib/index.js","mtime":1541806089080},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541806089144},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js","mtime":1541806090648}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nlet resizeTimeout;\nfunction resizeThrottler(actualResizeHandler) {\n  // ignore resize events as long as an actualResizeHandler execution is in the queue\n  if (!resizeTimeout) {\n    resizeTimeout = setTimeout(() => {\n      resizeTimeout = null;\n      actualResizeHandler();\n\n      // The actualResizeHandler will execute at a rate of 15fps\n    }, 66);\n  }\n}\n\nimport MobileMenu from \"@/layout/MobileMenu\";\nexport default {\n  components: {\n    MobileMenu\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"dark\"\n    },\n    colorOnScroll: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      extraNavClasses: \"\",\n      toggledClass: false\n    };\n  },\n  computed: {\n    showDownload() {\n      const excludedRoutes = [\"login\", \"landing\", \"profile\"];\n      return excludedRoutes.every(r => r !== this.$route.name);\n    }\n  },\n  methods: {\n    bodyClick() {\n      let bodyClick = document.getElementById(\"bodyClick\");\n\n      if (bodyClick === null) {\n        let body = document.querySelector(\"body\");\n        let elem = document.createElement(\"div\");\n        elem.setAttribute(\"id\", \"bodyClick\");\n        body.appendChild(elem);\n\n        let bodyClick = document.getElementById(\"bodyClick\");\n        bodyClick.addEventListener(\"click\", this.toggleNavbarMobile);\n      } else {\n        bodyClick.remove();\n      }\n    },\n    toggleNavbarMobile() {\n      this.NavbarStore.showNavbar = !this.NavbarStore.showNavbar;\n      this.toggledClass = !this.toggledClass;\n      this.bodyClick();\n    },\n    handleScroll() {\n      let scrollValue =\n        document.body.scrollTop || document.documentElement.scrollTop;\n      let navbarColor = document.getElementById(\"toolbar\");\n      this.currentScrollValue = scrollValue;\n      if (this.colorOnScroll > 0 && scrollValue > this.colorOnScroll) {\n        this.extraNavClasses = `md-${this.type}`;\n        navbarColor.classList.remove(\"md-transparent\");\n      } else {\n        if (this.extraNavClasses) {\n          this.extraNavClasses = \"\";\n          navbarColor.classList.add(\"md-transparent\");\n        }\n      }\n    },\n    scrollListener() {\n      resizeThrottler(this.handleScroll);\n    },\n    scrollToElement() {\n      let element_id = document.getElementById(\"downloadSection\");\n      if (element_id) {\n        element_id.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n      }\n    }\n  },\n  mounted() {\n    document.addEventListener(\"scroll\", this.scrollListener);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"scroll\", this.scrollListener);\n  }\n};\n",{"version":3,"sources":["MainNavbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MainNavbar.vue","sourceRoot":"src/layout","sourcesContent":["<template>\n  <md-toolbar id=\"toolbar\" md-elevation=\"0\" class=\"md-transparent md-absolute\" :class=\"extraNavClasses\" :color-on-scroll=\"colorOnScroll\">\n    <div class=\"md-toolbar-row md-collapse-lateral\">\n      <div class=\"md-toolbar-section-start\">\n        <a href=\"#/index2\">\n          <img src=\"../assets/logo2.png\" class=\"img-nav\">\n        </a>\n      </div>\n      <div class=\"md-toolbar-section-end\">\n        <md-button class=\"md-just-icon md-simple md-toolbar-toggle\" :class=\"{toggled: toggledClass}\" @click=\"toggleNavbarMobile()\">\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </md-button>\n\n        <div class=\"md-collapse\">\n          <div class=\"md-collapse-wrapper\">\n            <mobile-menu nav-mobile-section-start=\"false\">\n              <!-- Here you can add your items from the section-start of your toolbar -->\n            </mobile-menu>\n            <md-list>\n\n\n              <md-list-item href=\"#\" target=\"_blank\">\n                <i class=\"material-icons\">book</i> \n                    <p>Catálogo</p>\n              </md-list-item>\n              \n\n                <md-list-item href=\"javascript:void(0)\">\n                  <a href=\"#\" class=\"icon-shop\">\n                    <i class=\"material-icons\">\n                      shopping_cart\n                    </i>\n                  </a>\n                  \n                  <div>\n                    <span slot=\"badge\" class=\"badge badge-pill badge-warning shop\">6</span>\n                  </div>\n                </md-list-item>\n\n                <li class=\"md-list-item\">\n                  <a href=\"javascript:void(0)\" class=\"md-list-item-router md-list-item-container md-button-clean dropdown\">\n                    <div class=\"md-list-item-content\">\n                      <drop-down direction=\"down\">\n                        <md-button slot=\"title\" class=\"md-button md-button-link md-white md-simple dropdown-toggle\" data-toggle=\"dropdown\">\n                          <i class=\"material-icons\">face</i> \n                          <p>Embarque Conosco</p>\n                        </md-button>\n                        <ul class=\"dropdown-menu\">\n                          <li>\n                            <a   href=\"#\" class=\"dropdown-item\">\n                              <i class=\"material-icons\">person_add</i> Novo Usuário\n                            </a>\n                          </li>\n                          <li>\n                            <a href=\"#/login\" class=\"dropdown-item\">\n                              <i class=\"material-icons\">how_to_reg</i> Entrar\n                            </a>\n                          </li>\n                        </ul>\n                      </drop-down>\n                    </div>\n                  </a>\n                </li>\n\n\n              \n            </md-list>\n          </div>\n        </div>\n      </div>\n    </div>\n  </md-toolbar>\n</template>\n\n<style>\n.img-nav{\n    max-height: 50px;\n  }\n\n  .shop{\n    font-size: 0.8em !important;\n    padding: 0.35em 0.5em 0.35em 0.48em !important;\n    margin-top: 1em !important;\n  }\n</style>\n\n\n<script>\nlet resizeTimeout;\nfunction resizeThrottler(actualResizeHandler) {\n  // ignore resize events as long as an actualResizeHandler execution is in the queue\n  if (!resizeTimeout) {\n    resizeTimeout = setTimeout(() => {\n      resizeTimeout = null;\n      actualResizeHandler();\n\n      // The actualResizeHandler will execute at a rate of 15fps\n    }, 66);\n  }\n}\n\nimport MobileMenu from \"@/layout/MobileMenu\";\nexport default {\n  components: {\n    MobileMenu\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"dark\"\n    },\n    colorOnScroll: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      extraNavClasses: \"\",\n      toggledClass: false\n    };\n  },\n  computed: {\n    showDownload() {\n      const excludedRoutes = [\"login\", \"landing\", \"profile\"];\n      return excludedRoutes.every(r => r !== this.$route.name);\n    }\n  },\n  methods: {\n    bodyClick() {\n      let bodyClick = document.getElementById(\"bodyClick\");\n\n      if (bodyClick === null) {\n        let body = document.querySelector(\"body\");\n        let elem = document.createElement(\"div\");\n        elem.setAttribute(\"id\", \"bodyClick\");\n        body.appendChild(elem);\n\n        let bodyClick = document.getElementById(\"bodyClick\");\n        bodyClick.addEventListener(\"click\", this.toggleNavbarMobile);\n      } else {\n        bodyClick.remove();\n      }\n    },\n    toggleNavbarMobile() {\n      this.NavbarStore.showNavbar = !this.NavbarStore.showNavbar;\n      this.toggledClass = !this.toggledClass;\n      this.bodyClick();\n    },\n    handleScroll() {\n      let scrollValue =\n        document.body.scrollTop || document.documentElement.scrollTop;\n      let navbarColor = document.getElementById(\"toolbar\");\n      this.currentScrollValue = scrollValue;\n      if (this.colorOnScroll > 0 && scrollValue > this.colorOnScroll) {\n        this.extraNavClasses = `md-${this.type}`;\n        navbarColor.classList.remove(\"md-transparent\");\n      } else {\n        if (this.extraNavClasses) {\n          this.extraNavClasses = \"\";\n          navbarColor.classList.add(\"md-transparent\");\n        }\n      }\n    },\n    scrollListener() {\n      resizeThrottler(this.handleScroll);\n    },\n    scrollToElement() {\n      let element_id = document.getElementById(\"downloadSection\");\n      if (element_id) {\n        element_id.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n      }\n    }\n  },\n  mounted() {\n    document.addEventListener(\"scroll\", this.scrollListener);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"scroll\", this.scrollListener);\n  }\n};\n</script>\n"]}]}