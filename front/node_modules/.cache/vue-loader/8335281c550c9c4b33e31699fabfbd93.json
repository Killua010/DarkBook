{"remainingRequest":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/testefrontes3/ES3/front/src/views/cliente/CadDadosEndereco.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/src/views/cliente/CadDadosEndereco.vue","mtime":1543159591047},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541803797564},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/babel-loader/lib/index.js","mtime":1541803796996},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541803797564},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/vue-loader/lib/index.js","mtime":1541803800929}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { eventBus } from '../../main';\nimport axios from 'axios';\n\nexport default {\n    watch: {\n        'dados.enderecosCobranca.pais' : function(e){\n            this.indexPais = this.mapPais[e];\n            this.estados = this.paises[this.indexPais].estados;\n        },\n        'dados.enderecosCobranca.estado' : function(e){\n            this.indexEstado = this.mapEstados[e];\n            this.cidades = this.estados[this.indexEstado].cidades;\n        }\n    },\n     data: () => ({\n        paises : [],\n        estados : [],\n        cidades : [],\n        mapPais: [],\n        mapEstados: [],\n        indexPais : null,\n        indexEstado : null\n     }),\n     filters: {\n        firstUpperCase(str){\n            return str.toLowerCase().replace(/(?:^)\\S/g, function(a) { return a.toUpperCase(); });\n        }\n    },\n    created(){\n        var dadosAtuais = this;\n        eventBus.$on('validarDadosEnderecoCobranca', function(e){\n            if(e === true){\n                dadosAtuais.validar()\n            }\n        });\n\n        this.buscarTipoLogradouro();\n        this.buscarTipoResidencia();\n        this.buscarPaises();\n        \n        if(this.dados != null){\n            this.tipoResidencia = this.dados.enderecosCobranca.tipoResidencia;\n            this.tipoLogradouro = this.dados.enderecosCobranca.tipoLogradouro;\n            this.numero = this.dados.enderecosCobranca.numero;\n            this.cep = this.dados.enderecosCobranca.cep;\n            this.observacao = this.dados.enderecosCobranca.observacao;\n            this.nomeComposto = this.dados.enderecosCobranca.nomeComposto;\n            this.favorito = this.dados.enderecosCobranca.favorito;\n            this.cep = this.dados.enderecosCobranca.cep;\n        }\n\n        \n    },\n    props:['dados'],\n    methods:{\n        buscarTipoLogradouro(){\n            var dadosAtuais = this;\n            $.ajax({\n                type: \"POST\",\n                url: \"http://localhost:8082/DarkBook/tipoLogradouro?operacao=CONSULTAR\",\n                async: false\n            }).done(function(msg){\n                dadosAtuais.tiposLogradouro = msg\n             }).fail(function(jqXHR, textStatus, msg){\n                  console.log(msg);\n             })\n        },\n        buscarTipoResidencia(){\n            var dadosAtuais = this;\n            $.ajax({\n                type: \"POST\",\n                url: \"http://localhost:8082/DarkBook/tipoResidencia?operacao=CONSULTAR\",\n                async: false\n            }).done(function(msg){\n                dadosAtuais.tiposResidencia = msg\n             }).fail(function(jqXHR, textStatus, msg){\n                  console.log(msg);\n             })\n        },\n        buscarPaises(){\n            var dadosAtuais = this;\n            axios.post(`http://localhost:8082/DarkBook/paises?operacao=CONSULTAR`, \n            this.cliente, {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n                }\n            }).then(function(e){\n                dadosAtuais.paises = e.data\n                for(let i = 0; i < dadosAtuais.paises.length; i++){\n                    dadosAtuais.mapPais[dadosAtuais.paises[i].pais] = i;\n                    for(let j = 0; j < dadosAtuais.paises[i].estados.length; j++){\n                        dadosAtuais.mapEstados[dadosAtuais.paises[i].estados[j].sigla] = j;\n                    }\n                }\n\n                if(dadosAtuais.dados.enderecosCobranca.pais != \"\"){\n                    dadosAtuais.indexPais = dadosAtuais.mapPais[dadosAtuais.dados.enderecosCobranca.pais];\n                    dadosAtuais.estados = dadosAtuais.paises[dadosAtuais.indexPais].estados;\n                    dadosAtuais.indexEstado = dadosAtuais.mapEstados[dadosAtuais.dados.enderecosCobranca.estado];\n                    dadosAtuais.cidades = dadosAtuais.estados[dadosAtuais.indexEstado].cidades;\n                }\n\n            })\n            .catch(e => {\n                console.log(e)\n            })\n        },\n        validar(){\n            var erro = false;\n\n            var regCep = /\\d{5}-?\\d{3}/;\n\n            if(this.tipoResidencia == \"\"){\n                this.corErroSelect(\"tpEndereco\");\n                erro = true;\n            }\n\n            if(!regCep.test(this.cep)){\n                this.corErroInput(\"cep\");\n                erro = true;\n            } else {\n                this.cep = this.cep.replace(\"-\",\"\")\n            }\n\n            if(this.tipoLogradouro == \"\"){\n                this.corErroSelect(\"tpLogradouro\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.logradouro.trim().length < 3){\n                this.corErroInput(\"logradouro\");\n                erro = true;\n            }\n\n            console.log(this.dados.enderecosCobranca.cidade)\n\n            if(this.dados.enderecosCobranca.cidade == \"\"){\n                this.corErroSelect(\"cidade\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.estado == \"\"){\n                this.corErroSelect(\"estado\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.pais == \"\"){\n                this.corErroSelect(\"pais\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.bairro.trim().length < 3){\n                this.corErroInput(\"bairro\");\n                erro = true;\n            }\n\n            if(this.numero <= 0){\n                this.corErroInput(\"numero\");\n                erro = true;\n            }\n\n            if(this.observacao.trim().length > 0\n                && this.observacao.trim().length < 5){\n                this.corErroInput(\"complemento\");\n                erro = true;\n            }\n\n            if(erro == false){\n                this.dados.enderecosCobranca.tipoResidencia = this.tipoResidencia;\n                this.dados.enderecosCobranca.tipoLogradouro = this.tipoLogradouro;\n                this.dados.enderecosCobranca.numero = this.numero;\n                this.dados.enderecosCobranca.cep = this.cep;\n                this.dados.enderecosCobranca.observacao = this.observacao;\n                this.dados.enderecosCobranca.nomeComposto = this.nomeComposto;\n                this.dados.enderecosCobranca.favorito = this.favorito;\n                this.dados.enderecosCobranca.cep = this.cep;\n                eventBus.$emit('page', 3);\n            }\n\n        },\n        corErroInput(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        corErroSelect(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement.parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        buscarCep: function(event) {\n            // Nova variável \"cep\" somente com dígitos.\n            \n            let cep = $(\"#cep\").val().replace(/\\D/g, '');\n            var self = this;\n\n            //Verifica se campo cep possui valor informado.\n            if (cep != \"\") {\n                //Expressão regular para validar o CEP.\n                let validacep = /^[0-9]{8}$/;\n\n                //Valida o formato do CEP.\n                if(validacep.test(cep)) {\n                    //Consulta o webservice viacep.com.br/\n                    $.getJSON(\"https://viacep.com.br/ws/\"+ cep +\"/json/?callback=?\", function(dadosEndereco) {\n                        \n                        \n                        if (!(\"erro\" in dadosEndereco)) {\n                            self.dados.enderecosCobranca.logradouro = dadosEndereco.logradouro;\n                            //Atualiza os campos com os valores da consulta.\n                            self.dados.enderecosCobranca.bairro = dadosEndereco.bairro\n                            self.dados.enderecosCobranca.cidade = dadosEndereco.localidade\n                            self.dados.enderecosCobranca.estado = dadosEndereco.uf\n                            self.dados.enderecosCobranca.pais = \"Brasil\"\n                        } //end if.\n                       \n                    });\n\n\n                } //end if.\n            } //end if.\n\n            console.log(this)\n        }   \n        \n    }\n        \n}\n",{"version":3,"sources":["CadDadosEndereco.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA","file":"CadDadosEndereco.vue","sourceRoot":"src/views/cliente","sourcesContent":["<template>\n    <div>\n        <h3 class=\"text-center m-0 p-0\">Endereço de cobrança</h3>\n        <div class=\"md-layout\">\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>business</md-icon>\n                    <label>Tipo de endereco</label>\n                    <md-select id=\"tpEndereco\" v-model=\"tipoResidencia\" class=\"select-option\">\n                        <md-option v-for=\"tipo in tiposResidencia\" class=\"select\"  v-bind:value=\"tipo\">{{tipo | firstUpperCase() }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de endereço é obrigatório</span>\n                </md-field>\n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>place</md-icon>\n                    <label>CEP...</label>\n                    <md-input v-mask=\"'#####-###'\" v-on:keyup=\"buscarCep(this)\" id=\"cep\" v-model=\"cep\"></md-input>\n                    <span class=\"md-error erros\">O cep tem que ter 8 digitos</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>explore</md-icon>\n                    <label>Tipo Logradouro</label>\n                    <md-select id=\"tpLogradouro\" v-model=\"tipoLogradouro\" class=\"select-option\">\n                        <md-option v-for=\"tipo in tiposLogradouro\" class=\"select\"  v-bind:value=\"tipo\">{{tipo | firstUpperCase() }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de logradouro é obrigatório</span>\n                </md-field>\n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>location_searching</md-icon>\n                    <label>Logradouro...</label>\n                    <md-input id=\"logradouro\" v-model=\"dados.enderecosCobranca.logradouro\"></md-input>\n                    <span class=\"md-error erros\">O logradouro necessida ter no minimo 3 caracteres</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>public</md-icon>\n                    <label>Pais...</label>\n                     <md-select id=\"pais\" v-model=\"dados.enderecosCobranca.pais\" class=\"select-option\">\n                        <md-option v-for=\"pais in paises\" class=\"select\"  v-bind:value=\"pais.pais\">{{pais.pais}}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O pais é obrigatório</span>\n                </md-field>\n            </div>\n             <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>map</md-icon>\n                    <label>Estado...</label>\n                    <md-select id=\"estado\" v-model=\"dados.enderecosCobranca.estado\" class=\"select-option\">\n                        <md-option v-if=\"null != indexPais\" v-for=\"estado in estados\" class=\"select\"  v-bind:value=\"estado.sigla\">{{ estado.estado }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O estado é obrigatório</span>\n                </md-field>\n            </div>\n\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>location_city</md-icon>\n                    <label>Cidade...</label>\n                    <md-select id=\"cidade\" v-model=\"dados.enderecosCobranca.cidade\" class=\"select-option\">\n                        <md-option v-if=\"null != indexEstado\" class=\"select\" v-for=\"(cidade, index) in cidades\" v-bind:value=\"cidade.cidade\">{{ cidade.cidade }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">A cidade é obrigatório</span>\n                </md-field>\n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>store_mall_directory</md-icon>\n                    <label>Bairro...</label>\n                    <md-input id=\"bairro\" v-model=\"dados.enderecosCobranca.bairro\"></md-input>\n                    <span class=\"md-error erros\">O bairro necessida ter no minimo 3 caracteres</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>home</md-icon>\n                    <label>Numero...</label>\n                    <md-input type=\"number\" min=\"1\" id=\"numero\" v-model=\"numero\"></md-input>\n                    <span class=\"md-error erros\">O numero é obrigatório</span>\n                </md-field> \n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>directions</md-icon>\n                    <label>Complemento...</label>\n                    <md-input id=\"complemento\" v-model=\"observacao\"></md-input>\n                    <span class=\"md-error erros\">O complemento necessida ter no minimo 5 caracteres</span>\n                </md-field> \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { eventBus } from '../../main';\nimport axios from 'axios';\n\nexport default {\n    watch: {\n        'dados.enderecosCobranca.pais' : function(e){\n            this.indexPais = this.mapPais[e];\n            this.estados = this.paises[this.indexPais].estados;\n        },\n        'dados.enderecosCobranca.estado' : function(e){\n            this.indexEstado = this.mapEstados[e];\n            this.cidades = this.estados[this.indexEstado].cidades;\n        }\n    },\n     data: () => ({\n        paises : [],\n        estados : [],\n        cidades : [],\n        mapPais: [],\n        mapEstados: [],\n        indexPais : null,\n        indexEstado : null\n     }),\n     filters: {\n        firstUpperCase(str){\n            return str.toLowerCase().replace(/(?:^)\\S/g, function(a) { return a.toUpperCase(); });\n        }\n    },\n    created(){\n        var dadosAtuais = this;\n        eventBus.$on('validarDadosEnderecoCobranca', function(e){\n            if(e === true){\n                dadosAtuais.validar()\n            }\n        });\n\n        this.buscarTipoLogradouro();\n        this.buscarTipoResidencia();\n        this.buscarPaises();\n        \n        if(this.dados != null){\n            this.tipoResidencia = this.dados.enderecosCobranca.tipoResidencia;\n            this.tipoLogradouro = this.dados.enderecosCobranca.tipoLogradouro;\n            this.numero = this.dados.enderecosCobranca.numero;\n            this.cep = this.dados.enderecosCobranca.cep;\n            this.observacao = this.dados.enderecosCobranca.observacao;\n            this.nomeComposto = this.dados.enderecosCobranca.nomeComposto;\n            this.favorito = this.dados.enderecosCobranca.favorito;\n            this.cep = this.dados.enderecosCobranca.cep;\n        }\n\n        \n    },\n    props:['dados'],\n    methods:{\n        buscarTipoLogradouro(){\n            var dadosAtuais = this;\n            $.ajax({\n                type: \"POST\",\n                url: \"http://localhost:8082/DarkBook/tipoLogradouro?operacao=CONSULTAR\",\n                async: false\n            }).done(function(msg){\n                dadosAtuais.tiposLogradouro = msg\n             }).fail(function(jqXHR, textStatus, msg){\n                  console.log(msg);\n             })\n        },\n        buscarTipoResidencia(){\n            var dadosAtuais = this;\n            $.ajax({\n                type: \"POST\",\n                url: \"http://localhost:8082/DarkBook/tipoResidencia?operacao=CONSULTAR\",\n                async: false\n            }).done(function(msg){\n                dadosAtuais.tiposResidencia = msg\n             }).fail(function(jqXHR, textStatus, msg){\n                  console.log(msg);\n             })\n        },\n        buscarPaises(){\n            var dadosAtuais = this;\n            axios.post(`http://localhost:8082/DarkBook/paises?operacao=CONSULTAR`, \n            this.cliente, {\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n                }\n            }).then(function(e){\n                dadosAtuais.paises = e.data\n                for(let i = 0; i < dadosAtuais.paises.length; i++){\n                    dadosAtuais.mapPais[dadosAtuais.paises[i].pais] = i;\n                    for(let j = 0; j < dadosAtuais.paises[i].estados.length; j++){\n                        dadosAtuais.mapEstados[dadosAtuais.paises[i].estados[j].sigla] = j;\n                    }\n                }\n\n                if(dadosAtuais.dados.enderecosCobranca.pais != \"\"){\n                    dadosAtuais.indexPais = dadosAtuais.mapPais[dadosAtuais.dados.enderecosCobranca.pais];\n                    dadosAtuais.estados = dadosAtuais.paises[dadosAtuais.indexPais].estados;\n                    dadosAtuais.indexEstado = dadosAtuais.mapEstados[dadosAtuais.dados.enderecosCobranca.estado];\n                    dadosAtuais.cidades = dadosAtuais.estados[dadosAtuais.indexEstado].cidades;\n                }\n\n            })\n            .catch(e => {\n                console.log(e)\n            })\n        },\n        validar(){\n            var erro = false;\n\n            var regCep = /\\d{5}-?\\d{3}/;\n\n            if(this.tipoResidencia == \"\"){\n                this.corErroSelect(\"tpEndereco\");\n                erro = true;\n            }\n\n            if(!regCep.test(this.cep)){\n                this.corErroInput(\"cep\");\n                erro = true;\n            } else {\n                this.cep = this.cep.replace(\"-\",\"\")\n            }\n\n            if(this.tipoLogradouro == \"\"){\n                this.corErroSelect(\"tpLogradouro\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.logradouro.trim().length < 3){\n                this.corErroInput(\"logradouro\");\n                erro = true;\n            }\n\n            console.log(this.dados.enderecosCobranca.cidade)\n\n            if(this.dados.enderecosCobranca.cidade == \"\"){\n                this.corErroSelect(\"cidade\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.estado == \"\"){\n                this.corErroSelect(\"estado\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.pais == \"\"){\n                this.corErroSelect(\"pais\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.bairro.trim().length < 3){\n                this.corErroInput(\"bairro\");\n                erro = true;\n            }\n\n            if(this.numero <= 0){\n                this.corErroInput(\"numero\");\n                erro = true;\n            }\n\n            if(this.observacao.trim().length > 0\n                && this.observacao.trim().length < 5){\n                this.corErroInput(\"complemento\");\n                erro = true;\n            }\n\n            if(erro == false){\n                this.dados.enderecosCobranca.tipoResidencia = this.tipoResidencia;\n                this.dados.enderecosCobranca.tipoLogradouro = this.tipoLogradouro;\n                this.dados.enderecosCobranca.numero = this.numero;\n                this.dados.enderecosCobranca.cep = this.cep;\n                this.dados.enderecosCobranca.observacao = this.observacao;\n                this.dados.enderecosCobranca.nomeComposto = this.nomeComposto;\n                this.dados.enderecosCobranca.favorito = this.favorito;\n                this.dados.enderecosCobranca.cep = this.cep;\n                eventBus.$emit('page', 3);\n            }\n\n        },\n        corErroInput(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        corErroSelect(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement.parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        buscarCep: function(event) {\n            // Nova variável \"cep\" somente com dígitos.\n            \n            let cep = $(\"#cep\").val().replace(/\\D/g, '');\n            var self = this;\n\n            //Verifica se campo cep possui valor informado.\n            if (cep != \"\") {\n                //Expressão regular para validar o CEP.\n                let validacep = /^[0-9]{8}$/;\n\n                //Valida o formato do CEP.\n                if(validacep.test(cep)) {\n                    //Consulta o webservice viacep.com.br/\n                    $.getJSON(\"https://viacep.com.br/ws/\"+ cep +\"/json/?callback=?\", function(dadosEndereco) {\n                        \n                        \n                        if (!(\"erro\" in dadosEndereco)) {\n                            self.dados.enderecosCobranca.logradouro = dadosEndereco.logradouro;\n                            //Atualiza os campos com os valores da consulta.\n                            self.dados.enderecosCobranca.bairro = dadosEndereco.bairro\n                            self.dados.enderecosCobranca.cidade = dadosEndereco.localidade\n                            self.dados.enderecosCobranca.estado = dadosEndereco.uf\n                            self.dados.enderecosCobranca.pais = \"Brasil\"\n                        } //end if.\n                       \n                    });\n\n\n                } //end if.\n            } //end if.\n\n            console.log(this)\n        }   \n        \n    }\n        \n}\n</script>\n\n\n"]}]}