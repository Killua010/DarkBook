{"remainingRequest":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/testefrontes3/ES3/front/src/components/Parallax.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/src/components/Parallax.vue","mtime":1541806869849},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541803797564},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/babel-loader/lib/index.js","mtime":1541803796996},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541803797564},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/vue-loader/lib/index.js","mtime":1541803800929}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function() {\n    const context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\nexport default {\n  name: \"parallax\",\n  data() {\n    return {\n      styles: {},\n      debounceTimeout: 6\n    };\n  },\n  methods: {\n    handleScroll(scrollVal) {\n      let oVal = scrollVal / 3;\n      this.styles = {\n        transform: `translate3d(0, ${oVal}px,0)`\n      };\n    },\n    checkForParallax(scrollVal) {\n      let fn = debounce(\n        () => this.handleScroll(scrollVal),\n        this.debounceTimeout\n      );\n      fn();\n    }\n  },\n  mounted() {\n    let self = this;\n    window.addEventListener(\"scroll\", function() {\n      if (window.innerWidth > 991) {\n        let scrollVal = this.scrollY;\n        self.checkForParallax(scrollVal);\n      }\n    });\n  }\n};\n",{"version":3,"sources":["Parallax.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Parallax.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div :style=\"styles\">\n        <slot></slot>\n    </div>\n</template>\n<script>\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function() {\n    const context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\nexport default {\n  name: \"parallax\",\n  data() {\n    return {\n      styles: {},\n      debounceTimeout: 6\n    };\n  },\n  methods: {\n    handleScroll(scrollVal) {\n      let oVal = scrollVal / 3;\n      this.styles = {\n        transform: `translate3d(0, ${oVal}px,0)`\n      };\n    },\n    checkForParallax(scrollVal) {\n      let fn = debounce(\n        () => this.handleScroll(scrollVal),\n        this.debounceTimeout\n      );\n      fn();\n    }\n  },\n  mounted() {\n    let self = this;\n    window.addEventListener(\"scroll\", function() {\n      if (window.innerWidth > 991) {\n        let scrollVal = this.scrollY;\n        self.checkForParallax(scrollVal);\n      }\n    });\n  }\n};\n</script>\n"]}]}