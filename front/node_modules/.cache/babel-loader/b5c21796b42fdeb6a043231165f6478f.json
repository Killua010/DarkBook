{"remainingRequest":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/babel-loader/lib/index.js!/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/components/Parallax.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/components/Parallax.vue","mtime":1541806090992},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541806089144},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/babel-loader/lib/index.js","mtime":1541806089080},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541806089144},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js","mtime":1541806090648}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\nfunction debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\n\nexport default {\n  name: \"parallax\",\n  data: function data() {\n    return {\n      styles: {},\n      debounceTimeout: 6\n    };\n  },\n  methods: {\n    handleScroll: function handleScroll(scrollVal) {\n      var oVal = scrollVal / 3;\n      this.styles = {\n        transform: \"translate3d(0, \".concat(oVal, \"px,0)\")\n      };\n    },\n    checkForParallax: function checkForParallax(scrollVal) {\n      var _this = this;\n\n      var fn = debounce(function () {\n        return _this.handleScroll(scrollVal);\n      }, this.debounceTimeout);\n      fn();\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n    window.addEventListener(\"scroll\", function () {\n      if (window.innerWidth > 991) {\n        var scrollVal = this.scrollY;\n        self.checkForParallax(scrollVal);\n      }\n    });\n  }\n};",{"version":3,"sources":["Parallax.vue"],"names":[],"mappings":";;;;;AAMA,SAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA;AACA,MAAA,OAAA;AACA,SAAA,YAAA;AACA,QAAA,UAAA,IAAA;AAAA,QACA,OAAA,SADA;AAEA,iBAAA,OAAA;AACA,cAAA,WAAA,YAAA;AACA,gBAAA,IAAA;AACA,UAAA,CAAA,SAAA,EAAA,KAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA,KAHA,EAGA,IAHA,CAAA;AAIA,QAAA,aAAA,CAAA,OAAA,EAAA,KAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA,GATA;AAUA;;AACA,eAAA;AACA,QAAA,UADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,cAAA,EADA;AAEA,uBAAA;AAFA,KAAA;AAIA,GAPA;AAQA,WAAA;AACA,gBADA,wBACA,SADA,EACA;AACA,UAAA,OAAA,YAAA,CAAA;AACA,WAAA,MAAA,GAAA;AACA,4CAAA,IAAA;AADA,OAAA;AAGA,KANA;AAOA,oBAPA,4BAOA,SAPA,EAOA;AAAA;;AACA,UAAA,KAAA,SACA;AAAA,eAAA,MAAA,YAAA,CAAA,SAAA,CAAA;AAAA,OADA,EAEA,KAAA,eAFA,CAAA;AAIA;AACA;AAbA,GARA;AAuBA,SAvBA,qBAuBA;AACA,QAAA,OAAA,IAAA;AACA,WAAA,gBAAA,CAAA,QAAA,EAAA,YAAA;AACA,UAAA,OAAA,UAAA,GAAA,GAAA,EAAA;AACA,YAAA,YAAA,KAAA,OAAA;AACA,aAAA,gBAAA,CAAA,SAAA;AACA;AACA,KALA;AAMA;AA/BA,CAAA","sourcesContent":["<template>\n    <div :style=\"styles\">\n        <slot></slot>\n    </div>\n</template>\n<script>\nfunction debounce(func, wait, immediate) {\n  let timeout;\n  return function() {\n    const context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\nexport default {\n  name: \"parallax\",\n  data() {\n    return {\n      styles: {},\n      debounceTimeout: 6\n    };\n  },\n  methods: {\n    handleScroll(scrollVal) {\n      let oVal = scrollVal / 3;\n      this.styles = {\n        transform: `translate3d(0, ${oVal}px,0)`\n      };\n    },\n    checkForParallax(scrollVal) {\n      let fn = debounce(\n        () => this.handleScroll(scrollVal),\n        this.debounceTimeout\n      );\n      fn();\n    }\n  },\n  mounted() {\n    let self = this;\n    window.addEventListener(\"scroll\", function() {\n      if (window.innerWidth > 991) {\n        let scrollVal = this.scrollY;\n        self.checkForParallax(scrollVal);\n      }\n    });\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}