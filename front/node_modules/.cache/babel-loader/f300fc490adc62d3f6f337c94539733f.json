{"remainingRequest":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/babel-loader/lib/index.js!/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/views/components/cliente/CadDadosEndereco.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/views/components/cliente/CadDadosEndereco.vue","mtime":1541367108222},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1540935255037},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1540935255037},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { eventBus } from '../../../main';\nimport axios from 'axios';\nexport default {\n  watch: {\n    'dados.enderecosCobranca.estado': function dadosEnderecosCobrancaEstado(e) {\n      this.indexEstado = this.mapEstados[e];\n      this.cidades = this.estados[this.indexEstado].cidades;\n    }\n  },\n  data: function data() {\n    return {\n      paises: {},\n      estados: [],\n      cidades: [],\n      mapEstados: [],\n      indexEstado: null\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var dadosAtuais = this;\n    eventBus.$on('validarDadosEnderecoCobranca', function (e) {\n      if (e === true) {\n        dadosAtuais.validar();\n      }\n    });\n    axios.get(\"http://localhost:8082/DarkBook/pais\").then(function (response) {\n      _this.paises = response.data;\n      _this.estados = _this.paises.paises.estados;\n\n      for (var i = 0; i < _this.paises.paises.estados.length; i++) {\n        _this.mapEstados[_this.paises.paises.estados[i].sigla] = i;\n      }\n    }).catch(function (e) {\n      console.log(e);\n    });\n  },\n  props: ['dados'],\n  methods: {\n    validar: function validar() {\n      var erro = false;\n      var regCep = /\\d{5}-?\\d{3}/;\n\n      if (this.dados.enderecosCobranca.tipoResidencia == \"\") {\n        this.corErroSelect(\"tpEndereco\");\n        erro = true;\n      }\n\n      if (!regCep.test(this.dados.enderecosCobranca.cep)) {\n        this.corErroInput(\"cep\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.tipoLogradouro == \"\") {\n        this.corErroSelect(\"tpLogradouro\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.logradouro.trim().length <= 3) {\n        this.corErroInput(\"logradouro\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.cidade.trim().length <= 3) {\n        this.corErroInput(\"cidade\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.estado.trim().length < 2) {\n        this.corErroInput(\"estado\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.pais.trim().length <= 3) {\n        this.corErroInput(\"pais\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.bairro.trim().length <= 3) {\n        this.corErroInput(\"bairro\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.numero <= 0) {\n        this.corErroInput(\"numero\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosCobranca.observacao.trim().length > 0 && this.dados.enderecosCobranca.observacao.trim().length < 5) {\n        this.corErroInput(\"complemento\");\n        erro = true;\n      }\n\n      if (erro == false) {\n        eventBus.$emit('request', 'proximo');\n      }\n    },\n    corErroInput: function corErroInput(elemento) {\n      var elementoAtual = document.getElementById(elemento).parentElement;\n      elementoAtual.classList.add(\"md-error\");\n      elementoAtual.classList.add(\"md-invalid\");\n    },\n    corErroSelect: function corErroSelect(elemento) {\n      var elementoAtual = document.getElementById(elemento).parentElement.parentElement;\n      elementoAtual.classList.add(\"md-error\");\n      elementoAtual.classList.add(\"md-invalid\");\n    },\n    buscarCep: function buscarCep() {\n      var self = this; // Nova variável \"cep\" somente com dígitos.\n\n      var cep = $(\"#cep\").val().replace(/\\D/g, ''); //Verifica se campo cep possui valor informado.\n\n      if (cep != \"\") {\n        //Expressão regular para validar o CEP.\n        var validacep = /^[0-9]{8}$/; //Valida o formato do CEP.\n\n        if (validacep.test(cep)) {\n          //Consulta o webservice viacep.com.br/\n          $.getJSON(\"https://viacep.com.br/ws/\" + cep + \"/json/?callback=?\", function (dadosEndereco) {\n            if (!(\"erro\" in dadosEndereco)) {\n              self.dados.enderecosCobranca.logradouro = dadosEndereco.logradouro; //Atualiza os campos com os valores da consulta.\n\n              self.dados.enderecosCobranca.bairro = dadosEndereco.bairro;\n              self.dados.enderecosCobranca.estado = dadosEndereco.uf;\n              self.dados.enderecosCobranca.cidade = dadosEndereco.localidade;\n              self.dados.enderecosCobranca.pais = \"Brasil\";\n            } //end if.\n\n          });\n        } //end if.\n\n      } //end if.\n\n    }\n  }\n};",{"version":3,"sources":["CadDadosEndereco.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h3 class=\"text-center m-0 p-0\">Endereço de cobrança</h3>\n        <div class=\"md-layout\">\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>business</md-icon>\n                    <label>Tipo de endereco</label>\n                    <md-select id=\"tpEndereco\" v-model=\"dados.enderecosCobranca.tipoResidencia\" class=\"select-option\">\n                        <md-option class=\"select\" value=\"APARTAMENTO\">Apartamento</md-option>\n                        <md-option class=\"select\" value=\"CASA\">Casa</md-option>\n                        <md-option class=\"select\" value=\"COMERCIAL\">Comercial</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de endereço é obrigadório</span>\n                </md-field>\n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>place</md-icon>\n                    <label>CEP...</label>\n                    <md-input v-mask=\"'#####-###'\" v-on:keyup=\"buscarCep\" id=\"cep\" v-model=\"dados.enderecosCobranca.cep\"></md-input>\n                    <span class=\"md-error erros\">O cep tem que ter 8 digitos</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>explore</md-icon>\n                    <label>Tipo Logradouro</label>\n                    <md-select id=\"tpLogradouro\" v-model=\"dados.enderecosCobranca.tipoLogradouro\" class=\"select-option\">\n                        <md-option class=\"select\" value=\"RUA\">Rua</md-option>\n                        <md-option class=\"select\" value=\"AVENIDA\">Avenida</md-option>\n                        <md-option class=\"select\" value=\"VIELA\">Viela</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de logradouro é obrigadório</span>\n                </md-field>\n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>location_searching</md-icon>\n                    <label>Logradouro...</label>\n                    <md-input id=\"logradouro\" v-model=\"dados.enderecosCobranca.logradouro\"></md-input>\n                    <span class=\"md-error erros\">O logradouro necessida ter no minimo 3 caracteres</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>public</md-icon>\n                    <label>Pais...</label>\n                    <md-select id=\"pais\" v-model=\"dados.enderecosCobranca.pais\" class=\"select-option\">\n                        <md-option class=\"select\" v-for=\"pais in paises\" v-bind:value=\"pais.pais\" >{{ pais.pais }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de logradouro é obrigadório</span>\n                </md-field>\n            </div>\n             <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>map</md-icon>\n                    <label>Estado...</label>\n                    <md-select id=\"tpEstado\" v-model=\"dados.enderecosCobranca.estado\" class=\"select-option\">\n                        <md-option class=\"select\" v-for=\"(estado, index) in estados\" v-bind:value=\"estado.sigla\">{{ estado.estado }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de logradouro é obrigadório</span>\n                </md-field>\n            </div>\n\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>location_city</md-icon>\n                    <label>Cidade...</label>\n                    <md-select id=\"tpLogradouro\" v-model=\"dados.enderecosCobranca.cidade\" class=\"select-option\">\n                        <md-option v-if=\"null != indexEstado\" class=\"select\" v-for=\"(cidade, index) in cidades\" v-bind:value=\"cidade.cidade\">{{ cidade.cidade }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de logradouro é obrigadório</span>\n                </md-field>\n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>store_mall_directory</md-icon>\n                    <label>Bairro...</label>\n                    <md-input id=\"bairro\" v-model=\"dados.enderecosCobranca.bairro\"></md-input>\n                    <span class=\"md-error erros\">O bairro necessida ter no minimo 3 caracteres</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>home</md-icon>\n                    <label>Numero...</label>\n                    <md-input type=\"number\" min=\"1\" id=\"numero\" v-model=\"dados.enderecosCobranca.numero\"></md-input>\n                    <span class=\"md-error erros\">O numero é obrigatório</span>\n                </md-field> \n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>directions</md-icon>\n                    <label>Complemento...</label>\n                    <md-input id=\"complemento\" v-model=\"dados.enderecosCobranca.observacao\"></md-input>\n                    <span class=\"md-error erros\">O complemento necessida ter no minimo 5 caracteres</span>\n                </md-field> \n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { eventBus } from '../../../main';\nimport axios from 'axios';\n\nexport default {\n    watch: {\n        'dados.enderecosCobranca.estado' : function(e){\n            this.indexEstado = this.mapEstados[e];\n            this.cidades = this.estados[this.indexEstado].cidades;\n        }\n    },\n     data: () => ({\n         paises: {},\n         estados : [],\n         cidades : [],\n         mapEstados: [],\n         indexEstado : null\n     }),\n    created(){\n        var dadosAtuais = this;\n        eventBus.$on('validarDadosEnderecoCobranca', function(e){\n            if(e === true){\n                dadosAtuais.validar()\n            }\n        });\n        axios.get(\"http://localhost:8082/DarkBook/pais\")\n        .then(response => {\n            this.paises = response.data;\n            this.estados = this.paises.paises.estados;\n            for(let i = 0; i < this.paises.paises.estados.length; i++){\n                this.mapEstados[this.paises.paises.estados[i].sigla] = i;\n            }\n            \n        })\n        .catch(e => {\n            console.log(e)\n        })\n    },\n    props:['dados'],\n    methods:{\n        validar(){\n            var erro = false;\n\n            var regCep = /\\d{5}-?\\d{3}/;\n\n            if(this.dados.enderecosCobranca.tipoResidencia == \"\"){\n                this.corErroSelect(\"tpEndereco\");\n                erro = true;\n            }\n\n            if(!regCep.test(this.dados.enderecosCobranca.cep)){\n                this.corErroInput(\"cep\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.tipoLogradouro == \"\"){\n                this.corErroSelect(\"tpLogradouro\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.logradouro.trim().length <= 3){\n                this.corErroInput(\"logradouro\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.cidade.trim().length <= 3){\n                this.corErroInput(\"cidade\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.estado.trim().length < 2){\n                this.corErroInput(\"estado\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.pais.trim().length <= 3){\n                this.corErroInput(\"pais\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.bairro.trim().length <= 3){\n                this.corErroInput(\"bairro\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.numero <= 0){\n                this.corErroInput(\"numero\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosCobranca.observacao.trim().length > 0\n                && this.dados.enderecosCobranca.observacao.trim().length < 5){\n                this.corErroInput(\"complemento\");\n                erro = true;\n            }\n\n            if(erro == false){\n                eventBus.$emit('request','proximo');\n            }\n\n        },\n        corErroInput(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        corErroSelect(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement.parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        buscarCep: function() {\n            var self = this;\n            // Nova variável \"cep\" somente com dígitos.\n            var cep = $(\"#cep\").val().replace(/\\D/g, '');\n\n            //Verifica se campo cep possui valor informado.\n            if (cep != \"\") {\n                //Expressão regular para validar o CEP.\n                var validacep = /^[0-9]{8}$/;\n\n                //Valida o formato do CEP.\n                if(validacep.test(cep)) {\n                    //Consulta o webservice viacep.com.br/\n                    $.getJSON(\"https://viacep.com.br/ws/\"+ cep +\"/json/?callback=?\", function(dadosEndereco) {\n\n                        if (!(\"erro\" in dadosEndereco)) {\n                            self.dados.enderecosCobranca.logradouro = dadosEndereco.logradouro;\n                            //Atualiza os campos com os valores da consulta.\n                            self.dados.enderecosCobranca.bairro = dadosEndereco.bairro\n                            self.dados.enderecosCobranca.estado = dadosEndereco.uf\n                            self.dados.enderecosCobranca.cidade = dadosEndereco.localidade                            \n                            self.dados.enderecosCobranca.pais = \"Brasil\"\n                        } //end if.\n                       \n                    });\n\n\n                } //end if.\n            } //end if.\n        }   \n        \n    }\n        \n}\n</script>\n\n\n"],"sourceRoot":"src/views/components/cliente"}]}