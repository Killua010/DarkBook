{"remainingRequest":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/babel-loader/lib/index.js!/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/eslint-loader/index.js??ref--13-0!/home/daniel/Documentos/testefrontes3/ES3/front/src/mk_admin/components/NotificationPlugin/index.js","dependencies":[{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/src/mk_admin/components/NotificationPlugin/index.js","mtime":1541807359644},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1541803797564},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/babel-loader/lib/index.js","mtime":1541803796996},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/eslint-loader/index.js","mtime":1541803799621}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport Notifications from './Notifications.vue';\nvar NotificationStore = {\n  state: [],\n  // here the notifications will be added\n  removeNotification: function removeNotification(timestamp) {\n    var indexToDelete = this.state.findIndex(function (n) {\n      return n.timestamp === timestamp;\n    });\n\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1);\n    }\n  },\n  addNotification: function addNotification(notification) {\n    notification.timestamp = new Date();\n    notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length);\n    this.state.push(notification);\n  },\n  notify: function notify(notification) {\n    var _this = this;\n\n    if (Array.isArray(notification)) {\n      notification.forEach(function (notificationInstance) {\n        _this.addNotification(notificationInstance);\n      });\n    } else {\n      this.addNotification(notification);\n    }\n  }\n};\nvar NotificationsPlugin = {\n  install: function install(Vue) {\n    Vue.mixin({\n      data: function data() {\n        return {\n          notificationStore: NotificationStore\n        };\n      },\n      methods: {\n        notify: function notify(notification) {\n          this.notificationStore.notify(notification);\n        }\n      }\n    });\n    Object.defineProperty(Vue.prototype, '$notify', {\n      get: function get() {\n        return this.$root.notify;\n      }\n    });\n    Object.defineProperty(Vue.prototype, '$notifications', {\n      get: function get() {\n        return this.$root.notificationStore;\n      }\n    });\n    Vue.component('Notifications', Notifications);\n  }\n};\nexport default NotificationsPlugin;",{"version":3,"sources":["/home/daniel/Documentos/testefrontes3/ES3/front/src/mk_admin/components/NotificationPlugin/index.js"],"names":["Notifications","NotificationStore","state","removeNotification","timestamp","indexToDelete","findIndex","n","splice","addNotification","notification","Date","setMilliseconds","getMilliseconds","length","push","notify","Array","isArray","forEach","notificationInstance","NotificationsPlugin","install","Vue","mixin","data","notificationStore","methods","Object","defineProperty","prototype","get","$root","component"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AAEA,IAAMC,oBAAoB;AACxBC,SAAO,EADiB;AACb;AAEXC,oBAHwB,8BAGJC,SAHI,EAGO;AAC7B,QAAMC,gBAAgB,KAAKH,KAAL,CAAWI,SAAX,CAAqB;AAAA,aAAKC,EAAEH,SAAF,KAAgBA,SAArB;AAAA,KAArB,CAAtB;;AACA,QAAIC,kBAAkB,CAAC,CAAvB,EAA0B;AACxB,WAAKH,KAAL,CAAWM,MAAX,CAAkBH,aAAlB,EAAiC,CAAjC;AACD;AACF,GARuB;AASxBI,iBATwB,2BASPC,YATO,EASO;AAC7BA,iBAAaN,SAAb,GAAyB,IAAIO,IAAJ,EAAzB;AACAD,iBAAaN,SAAb,CAAuBQ,eAAvB,CAAuCF,aAAaN,SAAb,CAAuBS,eAAvB,KAA2C,KAAKX,KAAL,CAAWY,MAA7F;AACA,SAAKZ,KAAL,CAAWa,IAAX,CAAgBL,YAAhB;AACD,GAbuB;AAcxBM,QAdwB,kBAchBN,YAdgB,EAcF;AAAA;;AACpB,QAAIO,MAAMC,OAAN,CAAcR,YAAd,CAAJ,EAAiC;AAC/BA,mBAAaS,OAAb,CAAqB,UAACC,oBAAD,EAA0B;AAC7C,cAAKX,eAAL,CAAqBW,oBAArB;AACD,OAFD;AAGD,KAJD,MAIO;AACL,WAAKX,eAAL,CAAqBC,YAArB;AACD;AACF;AAtBuB,CAA1B;AAyBA,IAAIW,sBAAsB;AAExBC,SAFwB,mBAEfC,GAFe,EAEV;AACZA,QAAIC,KAAJ,CAAU;AACRC,UADQ,kBACA;AACN,eAAO;AACLC,6BAAmBzB;AADd,SAAP;AAGD,OALO;AAMR0B,eAAS;AACPX,cADO,kBACCN,YADD,EACe;AACpB,eAAKgB,iBAAL,CAAuBV,MAAvB,CAA8BN,YAA9B;AACD;AAHM;AAND,KAAV;AAYAkB,WAAOC,cAAP,CAAsBN,IAAIO,SAA1B,EAAqC,SAArC,EAAgD;AAC9CC,SAD8C,iBACvC;AACL,eAAO,KAAKC,KAAL,CAAWhB,MAAlB;AACD;AAH6C,KAAhD;AAKAY,WAAOC,cAAP,CAAsBN,IAAIO,SAA1B,EAAqC,gBAArC,EAAuD;AACrDC,SADqD,iBAC9C;AACL,eAAO,KAAKC,KAAL,CAAWN,iBAAlB;AACD;AAHoD,KAAvD;AAKAH,QAAIU,SAAJ,CAAc,eAAd,EAA+BjC,aAA/B;AACD;AA1BuB,CAA1B;AA6BA,eAAeqB,mBAAf","sourcesContent":["import Notifications from './Notifications.vue'\n\nconst NotificationStore = {\n  state: [], // here the notifications will be added\n\n  removeNotification (timestamp) {\n    const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp)\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1)\n    }\n  },\n  addNotification (notification) {\n    notification.timestamp = new Date()\n    notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length)\n    this.state.push(notification)\n  },\n  notify (notification) {\n    if (Array.isArray(notification)) {\n      notification.forEach((notificationInstance) => {\n        this.addNotification(notificationInstance)\n      })\n    } else {\n      this.addNotification(notification)\n    }\n  }\n}\n\nvar NotificationsPlugin = {\n\n  install (Vue) {\n    Vue.mixin({\n      data () {\n        return {\n          notificationStore: NotificationStore\n        }\n      },\n      methods: {\n        notify (notification) {\n          this.notificationStore.notify(notification)\n        }\n      }\n    })\n    Object.defineProperty(Vue.prototype, '$notify', {\n      get () {\n        return this.$root.notify\n      }\n    })\n    Object.defineProperty(Vue.prototype, '$notifications', {\n      get () {\n        return this.$root.notificationStore\n      }\n    })\n    Vue.component('Notifications', Notifications)\n  }\n}\n\nexport default NotificationsPlugin\n"]}]}