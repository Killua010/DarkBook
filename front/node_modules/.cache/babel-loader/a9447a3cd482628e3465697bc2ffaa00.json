{"remainingRequest":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/babel-loader/lib/index.js!/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/components/Tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/src/components/Tabs.vue","mtime":1540815738097},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1540935255037},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1540935255037},{"path":"/home/daniel/Documentos/DarkBookES3Front/ES3/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    flexColumn: Boolean,\n    navPillsIcons: Boolean,\n    plain: Boolean,\n    tabName: Array,\n    tabIcon: Array,\n    colorButton: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data: function data() {\n    return {\n      activePanel: this.tabName[0]\n    };\n  },\n  methods: {\n    switchPanel: function switchPanel(panel) {\n      this.activePanel = panel;\n    },\n    isActivePanel: function isActivePanel(panel) {\n      return this.activePanel == panel;\n    },\n    getColorButton: function getColorButton(colorButton) {\n      return \"md-\" + colorButton + \"\";\n    },\n    getTabContent: function getTabContent(index) {\n      return \"tab-pane-\" + index + \"\";\n    }\n  }\n};",{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,eAAA;AACA,SAAA;AACA,gBAAA,OADA;AAEA,mBAAA,OAFA;AAGA,WAAA,OAHA;AAIA,aAAA,KAJA;AAKA,aAAA,KALA;AAMA,iBAAA;AACA,YAAA,MADA;AAEA,eAAA;AAFA;AANA,GADA;AAYA,MAZA,kBAYA;AACA,WAAA;AACA,mBAAA,KAAA,OAAA,CAAA,CAAA;AADA,KAAA;AAGA,GAhBA;AAiBA,WAAA;AACA,eADA,uBACA,KADA,EACA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KAHA;AAIA,iBAJA,yBAIA,KAJA,EAIA;AACA,aAAA,KAAA,WAAA,IAAA,KAAA;AACA,KANA;AAOA,oBAAA,wBAAA,WAAA,EAAA;AACA,aAAA,QAAA,WAAA,GAAA,EAAA;AACA,KATA;AAUA,mBAAA,uBAAA,KAAA,EAAA;AACA,aAAA,cAAA,KAAA,GAAA,EAAA;AACA;AAZA;AAjBA,CAAA","sourcesContent":["<template>\n  <md-card class=\"md-card-tabs\"\n    :class=\"[\n      {'flex-column': flexColumn},\n      {'nav-pills-icons': navPillsIcons},\n      {'md-card-plain': plain}\n    ]\">\n    <md-card-header slot=\"header-title\">\n\n    </md-card-header>\n\n    <md-card-content>\n      <md-list class=\"nav-tabs\">\n        <md-list-item\n          v-for=\"(item, index) in tabName\"\n          @click=\"switchPanel(tabName[index])\"\n          :key=\"item\"\n          :class=\"[\n            {active: isActivePanel(tabName[index])},\n            {[getColorButton(colorButton)]: isActivePanel(tabName[index])}]\">\n            {{tabName[index]}}\n            <md-icon v-if=\"navPillsIcons\">{{tabIcon[index]}}</md-icon>\n        </md-list-item>\n      </md-list>\n\n      <transition name=\"fade\" mode=\"out-in\">\n        <div class=\"tab-content\">\n          <div\n            :class=\"getTabContent(index + 1)\"\n            v-for=\"(item, index) in tabName\"\n            :key=\"item\"\n            v-if=\"isActivePanel(tabName[index])\">\n            <slot :name=\"getTabContent(index + 1)\">\n              This is the default text!\n            </slot>\n          </div>\n        </div>\n      </transition>\n    </md-card-content>\n  </md-card>\n</template>\n\n<script>\nexport default {\n  props: {\n    flexColumn: Boolean,\n    navPillsIcons: Boolean,\n    plain: Boolean,\n    tabName: Array,\n    tabIcon: Array,\n    colorButton: {\n      type: String,\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      activePanel: this.tabName[0]\n    };\n  },\n  methods: {\n    switchPanel(panel) {\n      this.activePanel = panel;\n    },\n    isActivePanel(panel) {\n      return this.activePanel == panel;\n    },\n    getColorButton: function(colorButton) {\n      return \"md-\" + colorButton + \"\";\n    },\n    getTabContent: function(index) {\n      return \"tab-pane-\" + index + \"\";\n    }\n  }\n};\n</script>\n\n<style lang=\"css\">\n</style>\n"],"sourceRoot":"src/components"}]}