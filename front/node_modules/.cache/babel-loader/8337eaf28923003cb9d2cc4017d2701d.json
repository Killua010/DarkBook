{"remainingRequest":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/babel-loader/lib/index.js!/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/daniel/Documentos/testefrontes3/ES3/front/src/views/cliente/CadDadosEnderecoEntrega.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/src/views/cliente/CadDadosEnderecoEntrega.vue","mtime":1543836636742},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1543613641058},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/cache-loader/dist/cjs.js","mtime":1543613641058},{"path":"/home/daniel/Documentos/testefrontes3/ES3/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { eventBus } from '../../main';\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      paises: [],\n      estados: [],\n      cidades: [],\n      mapPais: [],\n      mapEstados: [],\n      indexPais: null,\n      indexEstado: null,\n      tiposLogradouro: [],\n      tiposResidencia: [],\n      favorito: null\n    };\n  },\n  watch: {\n    'dados.enderecosEntrega.pais': function dadosEnderecosEntregaPais(e) {\n      this.indexPais = this.mapPais[e];\n      this.estados = this.paises[this.indexPais].estados;\n    },\n    'dados.enderecosEntrega.estado': function dadosEnderecosEntregaEstado(e) {\n      this.indexEstado = this.mapEstados[e];\n      this.cidades = this.estados[this.indexEstado].cidades;\n    }\n  },\n  filters: {\n    firstUpperCase: function firstUpperCase(str) {\n      return str.toLowerCase().replace(/(?:^)\\S/g, function (a) {\n        return a.toUpperCase();\n      });\n    }\n  },\n  created: function created() {\n    this.preencherDados;\n    var dadosAtuais = this;\n    eventBus.$on('validarDadosEndereco', function (e) {\n      if (e === true) {\n        dadosAtuais.validar();\n      }\n    });\n\n    if (this.dados != null) {\n      this.tipoResidencia = this.dados.enderecosEntrega.tipoResidencia;\n      this.tipoLogradouro = this.dados.enderecosEntrega.tipoLogradouro;\n      this.numero = this.dados.enderecosEntrega.numero;\n      this.cep = this.dados.enderecosEntrega.cep;\n      this.observacao = this.dados.enderecosEntrega.observacao;\n      this.nomeComposto = this.dados.enderecosEntrega.nomeComposto;\n      this.favorito = this.dados.enderecosEntrega.favorito;\n    }\n  },\n  props: ['dados'],\n  computed: {\n    preencherDados: function preencherDados() {\n      this.tiposLogradouro = this.$store.state.tipoLogradouros.tipos;\n      this.tiposResidencia = this.$store.state.tipoResidencia.tipos;\n      this.paises = this.$store.state.paises.paises;\n\n      for (var i = 0; i < this.paises.length; i++) {\n        this.mapPais[this.paises[i].pais] = i;\n\n        for (var j = 0; j < this.paises[i].estados.length; j++) {\n          this.mapEstados[this.paises[i].estados[j].sigla] = j;\n        }\n      }\n\n      if (this.dados.enderecosEntrega.pais != \"\") {\n        this.indexPais = this.mapPais[this.dados.enderecosEntrega.pais];\n        this.estados = this.paises[this.indexPais].estados;\n        this.indexEstado = this.mapEstados[this.dados.enderecosEntrega.estado];\n        this.cidades = this.estados[this.indexEstado].cidades;\n      }\n    }\n  },\n  methods: {\n    validar: function validar() {\n      var erro = false;\n      var regCep = /\\d{5}-?\\d{3}/;\n\n      if (this.tipoResidencia == \"\") {\n        this.corErroSelect(\"tpEndereco\");\n        erro = true;\n      }\n\n      if (!regCep.test(this.cep)) {\n        this.corErroInput(\"cep\");\n        erro = true;\n      } else {\n        this.cep = this.cep.replace(\"-\", \"\");\n      }\n\n      if (this.tipoLogradouro == \"\") {\n        this.corErroSelect(\"tpLogradouro\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosEntrega.logradouro.trim().length < 3) {\n        this.corErroInput(\"logradouro\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosEntrega.cidade == \"\") {\n        this.corErroSelect(\"cidade\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosEntrega.estado == \"\") {\n        this.corErroSelect(\"estado\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosEntrega.pais == \"\") {\n        this.corErroSelect(\"pais\");\n        erro = true;\n      }\n\n      if (this.dados.enderecosEntrega.bairro.trim().length < 3) {\n        this.corErroInput(\"bairro\");\n        erro = true;\n      }\n\n      if (this.numero <= 0) {\n        this.corErroInput(\"numero\");\n        erro = true;\n      }\n\n      if (this.observacao.trim().length > 0 && this.observacao.trim().length < 5) {\n        this.corErroInput(\"complemento\");\n        erro = true;\n      }\n\n      if (this.nomeComposto.trim().length < 3) {\n        this.corErroInput(\"nomeComposto\");\n        erro = true;\n      }\n\n      if (erro == false) {\n        this.dados.enderecosEntrega.tipoResidencia = this.tipoResidencia;\n        this.dados.enderecosEntrega.tipoLogradouro = this.tipoLogradouro;\n        this.dados.enderecosEntrega.numero = this.numero;\n        this.dados.enderecosEntrega.cep = this.cep;\n        this.dados.enderecosEntrega.observacao = this.observacao;\n        this.dados.enderecosEntrega.nomeComposto = this.nomeComposto;\n        this.dados.enderecosEntrega.favorito = this.favorito;\n        eventBus.$emit('page', 2);\n        this.$emit('dados-valido-cliente', true);\n      }\n    },\n    corErroInput: function corErroInput(elemento) {\n      var elementoAtual = document.getElementById(elemento).parentElement;\n      elementoAtual.classList.add(\"md-error\");\n      elementoAtual.classList.add(\"md-invalid\");\n    },\n    corErroSelect: function corErroSelect(elemento) {\n      var elementoAtual = document.getElementById(elemento).parentElement.parentElement;\n      elementoAtual.classList.add(\"md-error\");\n      elementoAtual.classList.add(\"md-invalid\");\n    },\n    buscarCep: function buscarCep() {\n      var self = this; // Nova variável \"cep\" somente com dígitos.\n\n      var cep = $(\"#cep\").val().replace(/\\D/g, ''); //Verifica se campo cep possui valor informado.\n\n      if (cep != \"\") {\n        //Expressão regular para validar o CEP.\n        var validacep = /^[0-9]{8}$/; //Valida o formato do CEP.\n\n        if (validacep.test(cep)) {\n          //Consulta o webservice viacep.com.br/\n          $.getJSON(\"https://viacep.com.br/ws/\" + cep + \"/json/?callback=?\", function (dadosEndereco) {\n            if (!(\"erro\" in dadosEndereco)) {\n              self.dados.enderecosEntrega.logradouro = dadosEndereco.logradouro; //Atualiza os campos com os valores da consulta.\n\n              self.dados.enderecosEntrega.bairro = dadosEndereco.bairro;\n              self.dados.enderecosEntrega.cidade = dadosEndereco.localidade;\n              self.dados.enderecosEntrega.estado = dadosEndereco.uf;\n              self.dados.enderecosEntrega.pais = \"Brasil\";\n            } //end if.\n\n          });\n        } //end if.\n\n      } //end if.\n\n    }\n  }\n};",{"version":3,"sources":["CadDadosEnderecoEntrega.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <h3 class=\"text-center m-0 p-0\">Endereço de entrega</h3>\n        <div class=\"md-layout\">\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>business</md-icon>\n                    <label>Tipo de endereco</label>\n                    <md-select id=\"tpEndereco\" v-model=\"tipoResidencia\" class=\"select-option\">\n                        <md-option v-for=\"tipo in tiposResidencia\" class=\"select\"  v-bind:value=\"tipo\">{{tipo | firstUpperCase() }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de endereço é obrigatório</span>\n                </md-field>\n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>place</md-icon>\n                    <label>CEP...</label>\n                    <md-input v-mask=\"'#####-###'\" v-on:keyup=\"buscarCep\" id=\"cep\" v-model=\"cep\"></md-input>\n                     <span class=\"md-error erros\">O cep tem que ter 8 digitos</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>explore</md-icon>\n                    <label>Tipo Logradouro</label>\n                    <md-select id=\"tpLogradouro\" v-model=\"tipoLogradouro\" class=\"select-option\">\n                        <md-option v-for=\"tipo in tiposLogradouro\" class=\"select\"  v-bind:value=\"tipo\">{{tipo | firstUpperCase() }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O tipo de logradouro é obrigatório</span>\n                </md-field>\n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>location_searching</md-icon>\n                    <label>Logradouro...</label>\n                    <md-input id=\"logradouro\" v-model=\"dados.enderecosEntrega.logradouro\"></md-input>\n                    <span class=\"md-error erros\">O logradouro necessida ter no minimo 3 caracteres</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>public</md-icon>\n                    <label>Pais...</label>\n                    <md-select id=\"pais\" v-model=\"dados.enderecosEntrega.pais\" class=\"select-option\">\n                        <md-option v-for=\"pais in paises\" class=\"select\"  v-bind:value=\"pais.pais\">{{pais.pais}}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O pais é obrigatório</span>\n                </md-field> \n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>map</md-icon>\n                    <label>Estado...</label>\n                    <md-select id=\"estado\" v-model=\"dados.enderecosEntrega.estado\" class=\"select-option\">\n                        <md-option v-if=\"null != indexPais\" v-for=\"estado in estados\" class=\"select\"  v-bind:value=\"estado.sigla\">{{ estado.estado }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">O estado é obrigatório</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>location_city</md-icon>\n                    <label>Cidade...</label>\n                    <md-select id=\"cidade\" v-model=\"dados.enderecosEntrega.cidade\" class=\"select-option\">\n                        <md-option v-if=\"null != indexEstado\" class=\"select\" v-for=\"cidade in cidades\" v-bind:value=\"cidade.cidade\">{{ cidade.cidade }}</md-option>\n                    </md-select>\n                    <span class=\"md-error erros\">A cidade é obrigatório</span>\n                </md-field> \n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>store_mall_directory</md-icon>\n                    <label>Bairro...</label>\n                    <md-input id=\"bairro\" v-model=\"dados.enderecosEntrega.bairro\"></md-input>\n                    <span class=\"md-error erros\">O bairro necessida ter no minimo 3 caracteres</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>home</md-icon>\n                    <label>Numero...</label>\n                    <md-input type=\"number\" min=\"1\" id=\"numero\" v-model=\"numero\"></md-input>\n                    <span class=\"md-error erros\">O numero é obrigatório</span>\n                </md-field> \n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>directions</md-icon>\n                    <label>Complemento...</label>\n                    <md-input id=\"complemento\" v-model=\"observacao\"></md-input>\n                    <span class=\"md-error erros\">O complemento necessida ter no minimo 5 caracteres</span>\n                </md-field> \n            </div>\n\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-field class=\"md-form-group\">\n                    <md-icon>account_box</md-icon>\n                    <label>Nome Composto...</label>\n                    <md-input id=\"nomeComposto\" v-model=\"nomeComposto\"></md-input>\n                    <span class=\"md-error erros\">O nome necessida ter no minimo 3 caracteres</span>\n                </md-field> \n            </div>\n            <div class=\"md-layout-item md-size-50 md-xsmall-size-100\">\n                <md-icon class=\"icon-endereco\">favorite_border</md-icon>\n                <md-checkbox v-model=\"favorito\">Endereço favorito?</md-checkbox>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { eventBus } from '../../main';\nimport axios from 'axios';\n\nexport default {\n    data: () => ({\n        paises : [],\n        estados : [],\n        cidades : [],\n        mapPais: [],\n        mapEstados: [],\n        indexPais : null,\n        indexEstado : null,\n        tiposLogradouro:[],\n        tiposResidencia:[],\n        favorito : null\n    }),\n    watch: {\n        'dados.enderecosEntrega.pais' : function(e){\n            this.indexPais = this.mapPais[e];\n            this.estados = this.paises[this.indexPais].estados;\n        },\n        'dados.enderecosEntrega.estado' : function(e){\n            this.indexEstado = this.mapEstados[e];\n            this.cidades = this.estados[this.indexEstado].cidades;\n        }\n    },\n    filters: {\n        firstUpperCase(str){\n            return str.toLowerCase().replace(/(?:^)\\S/g, function(a) { return a.toUpperCase(); });\n        }\n    },\n    created(){\n        this.preencherDados;\n        var dadosAtuais = this;\n        eventBus.$on('validarDadosEndereco', function(e){\n            if(e === true){\n                dadosAtuais.validar()\n            }\n        })\n\n        if(this.dados != null){\n            this.tipoResidencia = this.dados.enderecosEntrega.tipoResidencia;\n            this.tipoLogradouro = this.dados.enderecosEntrega.tipoLogradouro;\n            this.numero = this.dados.enderecosEntrega.numero;\n            this.cep = this.dados.enderecosEntrega.cep;\n            this.observacao = this.dados.enderecosEntrega.observacao;\n            this.nomeComposto = this.dados.enderecosEntrega.nomeComposto;\n            this.favorito = this.dados.enderecosEntrega.favorito;\n        }\n    },\n    props:['dados'],\n    computed: {\n        preencherDados(){\n            this.tiposLogradouro = this.$store.state.tipoLogradouros.tipos;\n            this.tiposResidencia = this.$store.state.tipoResidencia.tipos;\n            this.paises = this.$store.state.paises.paises; \n            for(let i = 0; i < this.paises.length; i++){\n                this.mapPais[this.paises[i].pais] = i;\n                for(let j = 0; j < this.paises[i].estados.length; j++){\n                    this.mapEstados[this.paises[i].estados[j].sigla] = j;\n                }\n            }\n\n            if(this.dados.enderecosEntrega.pais != \"\"){\n                this.indexPais = this.mapPais[this.dados.enderecosEntrega.pais];\n                this.estados = this.paises[this.indexPais].estados;\n                this.indexEstado = this.mapEstados[this.dados.enderecosEntrega.estado];\n                this.cidades = this.estados[this.indexEstado].cidades;\n            }\n        }\n    },\n    methods:{\n        validar(){\n            var erro = false;\n\n            var regCep = /\\d{5}-?\\d{3}/;\n\n            if(this.tipoResidencia == \"\"){\n                this.corErroSelect(\"tpEndereco\");\n                erro = true;\n            }\n\n            if(!regCep.test(this.cep)){\n                this.corErroInput(\"cep\");\n                erro = true;\n            } else {\n                 this.cep = this.cep.replace(\"-\",\"\")\n            }\n\n            if(this.tipoLogradouro == \"\"){\n                this.corErroSelect(\"tpLogradouro\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosEntrega.logradouro.trim().length < 3){\n                this.corErroInput(\"logradouro\");\n                erro = true;\n            }\n            \n            if(this.dados.enderecosEntrega.cidade == \"\"){\n                this.corErroSelect(\"cidade\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosEntrega.estado == \"\"){\n                this.corErroSelect(\"estado\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosEntrega.pais == \"\"){\n                this.corErroSelect(\"pais\");\n                erro = true;\n            }\n\n            if(this.dados.enderecosEntrega.bairro.trim().length < 3){\n                this.corErroInput(\"bairro\");\n                erro = true;\n            }\n\n            if(this.numero <= 0){\n                this.corErroInput(\"numero\");\n                erro = true;\n            }\n\n            if(this.observacao.trim().length > 0\n                && this.observacao.trim().length < 5){\n                this.corErroInput(\"complemento\");\n                erro = true;\n            }\n\n            if(this.nomeComposto.trim().length < 3){\n                this.corErroInput(\"nomeComposto\");\n                erro = true;\n            }\n\n            if(erro == false){\n                this.dados.enderecosEntrega.tipoResidencia = this.tipoResidencia;\n                this.dados.enderecosEntrega.tipoLogradouro = this.tipoLogradouro;\n                this.dados.enderecosEntrega.numero = this.numero;\n                this.dados.enderecosEntrega.cep = this.cep;\n                this.dados.enderecosEntrega.observacao = this.observacao;\n                this.dados.enderecosEntrega.nomeComposto = this.nomeComposto;\n                this.dados.enderecosEntrega.favorito = this.favorito;\n                eventBus.$emit('page', 2);\n                this.$emit('dados-valido-cliente',true);\n            }\n\n        },\n        corErroInput(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        corErroSelect(elemento){\n            var elementoAtual = document.getElementById(elemento).parentElement.parentElement;\n            elementoAtual.classList.add(\"md-error\")\n            elementoAtual.classList.add(\"md-invalid\")\n        },\n        buscarCep: function() {\n            var self = this;\n            // Nova variável \"cep\" somente com dígitos.\n            var cep = $(\"#cep\").val().replace(/\\D/g, '');\n\n            //Verifica se campo cep possui valor informado.\n            if (cep != \"\") {\n                //Expressão regular para validar o CEP.\n                var validacep = /^[0-9]{8}$/;\n\n                //Valida o formato do CEP.\n                if(validacep.test(cep)) {\n                    //Consulta o webservice viacep.com.br/\n                    $.getJSON(\"https://viacep.com.br/ws/\"+ cep +\"/json/?callback=?\", function(dadosEndereco) {\n\n                        if (!(\"erro\" in dadosEndereco)) {\n                            self.dados.enderecosEntrega.logradouro = dadosEndereco.logradouro;\n                            //Atualiza os campos com os valores da consulta.\n                            self.dados.enderecosEntrega.bairro = dadosEndereco.bairro\n                            self.dados.enderecosEntrega.cidade = dadosEndereco.localidade\n                            self.dados.enderecosEntrega.estado = dadosEndereco.uf\n                            self.dados.enderecosEntrega.pais = \"Brasil\"\n                        } //end if.\n                       \n                    });\n\n\n                } //end if.\n            } //end if.\n        }   \n    }\n}\n</script>\n\n\n<style>\n.icon-endereco{\n    margin-right: 5px !important;  \n    margin-top:-5px!important;\n}\n</style>\n\n"],"sourceRoot":"src/views/cliente"}]}